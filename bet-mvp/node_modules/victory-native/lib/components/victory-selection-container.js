"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectionContainerMixin = exports.VictorySelectionContainer = void 0;

var _flow2 = _interopRequireDefault(require("lodash/flow"));

var _react = _interopRequireDefault(require("react"));

var _reactNativeSvg = require("react-native-svg");

var _victorySelectionContainer = require("victory-selection-container");

var _victoryContainer = require("./victory-container");

var _nativeHelpers = _interopRequireDefault(require("../helpers/native-helpers"));

var _excluded = ["style"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// ensure the selection component get native styles
var DefaultSelectionComponent = function (_ref) {
  var _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Rect, _extends({}, otherProps, _nativeHelpers.default.getStyle(style)));
};

function nativeSelectionMixin(Base) {
  var _class;

  // @ts-expect-error "TS2545: A mixin class must have a constructor with a single rest parameter of type 'any[]'."
  return _class = /*#__PURE__*/function (_Base) {
    _inherits(VictoryNativeSelectionContainer, _Base);

    var _super = _createSuper(VictoryNativeSelectionContainer);

    function VictoryNativeSelectionContainer() {
      _classCallCheck(this, VictoryNativeSelectionContainer);

      return _super.apply(this, arguments);
    }

    return _createClass(VictoryNativeSelectionContainer);
  }(Base), _class.defaultProps = _objectSpread(_objectSpread({}, _victorySelectionContainer.VictorySelectionContainer.defaultProps), {}, {
    standalone: true,
    selectionComponent: /*#__PURE__*/_react.default.createElement(DefaultSelectionComponent, null)
  }), _class.defaultEvents = function (props) {
    return [{
      target: "parent",
      eventHandlers: {
        onTouchStart: function (evt, targetProps) {
          if (props.disable) {
            return {};
          }

          _victorySelectionContainer.SelectionHelpers.onMouseMove.cancel();

          return _victorySelectionContainer.SelectionHelpers.onMouseDown(evt, targetProps);
        },
        onTouchMove: function (evt, targetProps) {
          return props.disable ? {} : _victorySelectionContainer.SelectionHelpers.onMouseMove(evt, targetProps);
        },
        onTouchEnd: function (evt, targetProps) {
          if (props.disable) {
            return {};
          }

          _victorySelectionContainer.SelectionHelpers.onMouseMove.cancel();

          return _victorySelectionContainer.SelectionHelpers.onMouseUp(evt, targetProps);
        }
      }
    }];
  }, _class;
}

var combinedMixin = (0, _flow2.default)(_victorySelectionContainer.selectionContainerMixin, nativeSelectionMixin);

var selectionContainerMixin = function (base) {
  return combinedMixin(base);
};

exports.selectionContainerMixin = selectionContainerMixin;
var VictorySelectionContainer = selectionContainerMixin(_victoryContainer.VictoryContainer);
exports.VictorySelectionContainer = VictorySelectionContainer;